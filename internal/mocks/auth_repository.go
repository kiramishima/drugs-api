// Code generated by MockGen. DO NOT EDIT.
// Source: .\internal\interfaces\auth_repository.go
//
// Generated by this command:
//
//	mockgen -source .\internal\interfaces\auth_repository.go -destination .\internal\mocks\auth_repository.go -package mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	models "kiramishima/ionix/internal/models"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockAuthRepository is a mock of AuthRepository interface.
type MockAuthRepository struct {
	ctrl     *gomock.Controller
	recorder *MockAuthRepositoryMockRecorder
}

// MockAuthRepositoryMockRecorder is the mock recorder for MockAuthRepository.
type MockAuthRepositoryMockRecorder struct {
	mock *MockAuthRepository
}

// NewMockAuthRepository creates a new mock instance.
func NewMockAuthRepository(ctrl *gomock.Controller) *MockAuthRepository {
	mock := &MockAuthRepository{ctrl: ctrl}
	mock.recorder = &MockAuthRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthRepository) EXPECT() *MockAuthRepositoryMockRecorder {
	return m.recorder
}

// CreateAccount mocks base method.
func (m *MockAuthRepository) CreateAccount(ctx context.Context, form *models.RegisterForm) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAccount", ctx, form)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateAccount indicates an expected call of CreateAccount.
func (mr *MockAuthRepositoryMockRecorder) CreateAccount(ctx, form any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAccount", reflect.TypeOf((*MockAuthRepository)(nil).CreateAccount), ctx, form)
}

// FindUserByCredentials mocks base method.
func (m *MockAuthRepository) FindUserByCredentials(ctx context.Context, form *models.AuthForm) (*models.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindUserByCredentials", ctx, form)
	ret0, _ := ret[0].(*models.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindUserByCredentials indicates an expected call of FindUserByCredentials.
func (mr *MockAuthRepositoryMockRecorder) FindUserByCredentials(ctx, form any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindUserByCredentials", reflect.TypeOf((*MockAuthRepository)(nil).FindUserByCredentials), ctx, form)
}
